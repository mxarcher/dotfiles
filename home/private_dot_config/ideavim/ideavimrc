" =================================
" = Plugins ========================
" ==================================
set surround
set multiple-cursors
set commentary
set showmode
set ideamarks
set keep-english-in-normal
set ideajoin
set easymotion

" set ideastatusicon=enabled

" ==================================
" = general settings========================
" ==================================
nmap L $
vmap L $
nmap H ^
vmap H ^

" 在DistractionFreeMode中下断点后当前行会高亮，或者实在受不了可以添加一带gutter icon，这个在左侧点击右键一般就可以显示出来了"
" nmap <C-z> <action>(ToggleDistractionFreeMode)
" nmap zm <action>(MaximizeEditorInSplit)
vmap p "_dp



set nu
set rnu
set ignorecase
set smartcase
set incsearch
set hlsearch
set so=30
set history=200


inoremap <c-j> <Esc>:action MoveStatementDown<CR>i
inoremap <c-k> <Esc>:action MoveStatementUp<CR>i

vnoremap J :action MoveStatementDown<CR>
vnoremap K :action MoveStatementUp<CR>
nmap <C-t> <action>(ActivateTerminalToolWindow)

" zip
nmap zO <action>(ExpandAllRegions)
nmap zC <action>(CollapseAllRegions)

" = NERDTree =====================================
" 注意，NERDTree在文件界面可以使用q来退出"
set NERDTree
let g:NERDTreeMapOpenVSplit='v'
let g:NERDTreeMapOpenSplit='h'
nmap ,e :NERDTree<CR>
nmap ,c :NERDTreeClose<CR>

nmap ,v :e ~/.config/ideavim/ideavimrc<CR>
nmap ,r <action>(IdeaVim.ReloadVimRc.reload)

nmap ,d <action>(ToggleDistractionFreeMode)
nmap ,f <action>(ToggleFullScreen)

" 不知道为啥不起作用
" let g:NERDTreeMapActivateNode='l'

" ==================================
" = Which-Key=======================
" ==================================
nmap <SPACE> <Nop>
let mapleader=" "
set which-key
set notimeout

" search
let g:WhichKeyDesc_Search = "<leader>s Search"
let g:WhichKeyDesc_Search_NoHighlight = "<leader>sc NoHighLight"
nmap <leader>sc :noh<CR>
nmap <leader>sf <action>(Find)
nmap <leader>sr <action>(Replace)
nmap <leader>sF <action>(FindInPath)
nmap <leader>sR <action>(ReplaceInPath)


" file
let g:WhichKeyDesc_File = "<leader>f File"
let g:WhichKeyDesc_File_RecentFiles = "<leader>fr RecentFiles"
nmap <leader>fr <action>(RecentFiles)
let g:WhichKeyDesc_File_Switcher = "<leader>fb Switcher"
nmap <leader>fb <action>(Switcher)
let g:WhichKeyDesc_File_RecentLocations = "<leader>fl RecentLocations"
nmap <leader>fl <action>(RecentLocations)
let g:WhichKeyDesc_File_GotoFile = "<leader>ff GotoFile"
nmap <leader>ff <action>(GotoFile)
let g:WhichKeyDesc_File_GotoClass = "<leader>fc GotoClass"
nmap <leader>fc <action>(GotoClass)
let g:WhichKeyDesc_File_GotoSymbol= "<leader>fc GotoSymbol"
nmap <leader>fs <action>(GotoSymbol)
let g:WhichKeyDesc_File_GotoAction = "<leader>fc GotoAction"
nmap <leader>fa <action>(GotoAction)
let g:WhichKeyDesc_File_OpenNERDTree = "<leader>ft OpenNERDTree"
nmap <leader>ft :NERDTree<CR>
let g:WhichKeyDesc_File_CloseNERDTree = "<leader>fT CloseNERDTree"
nmap <leader>fT :NERDTreeClose<CR>

" easymotion
map s <Plug>(easymotion-s2)
nmap <leader>dj d<Plug>(easymotion-j)
nmap <leader>dk d<Plug>(easymotion-k)
nmap <leader>vj v<Plug>(easymotion-j)
nmap <leader>vk v<Plug>(easymotion-k)
nmap <leader>yj y<Plug>(easymotion-j)
nmap <leader>yk y<Plug>(easymotion-k)

" navigation
nmap ga '.
nmap gd <action>(GotoDeclaration)
nmap gb <action>(GotoTypeDeclaration)
nmap ge <action>(GotoNextError)
nmap gE <action>(GotoPreviousError)
nmap gi <action>(GotoImplementation)
nmap gs <action>(GotoSuperMethod)
nmap gt <action>(GotoTest)
nmap gc <action>(JumpToLastChange)
nmap gC <action>(JumpToNextChange)
nmap gl <action>(ShowErrorDescription)
nmap gm <action>(MethodDown)
nmap gM <action>(MethodUp)

" tab
nmap J :tabN<CR>
nmap K :tabn<CR>
nmap tl <action>(MoveTabRight)
nmap tj <action>(MoveTabDown)
nmap tm <action>(MoveEditorToOppositeTabGroup)
nmap tr <action>(ReopenClosedTab)
nmap to <action>(OpenEditorInOppositeTabGroup)
" nmap tc <action>(CloseContent)
nmap tc <action>(CloseAllEditorsButActive)

" window
let g:WhichKeyDesc_Windows = "<leader>w Windows"
nmap <leader>wc <action>(ActivateCommitToolWindow)
nmap <leader>wd <action>(ActivateDebugToolWindow)
nmap <leader>wr <action>(ActivateRunToolWindow)
nmap <leader>wg <action>(ActivateVersionControlToolWindow)
nmap <leader>wf <action>(ActivateFavoritesToolWindow)
nmap <leader>wo <action>(UnsplitAll) \| <action>(HideAllWindows)
nmap <leader>we <action>(ActivateAndroidEmulatorToolWindow)

nmap <A-h> <action>(StretchSplitToLeft)
nmap <A-j> <action>(StretchSplitToBottom)
nmap <A-k> <action>(StretchSplitToTop)
nmap <A-l> <action>(StretchSplitToRight)
cmap term action ActivateTerminalToolWindow

" lsp action
let g:WhichKeyDesc_Bookmarks= "<leader>l LSP"
nmap <leader>lu <action>(FindUsages)
nmap <leader>lr <action>(RenameElement)
nmap <leader>li <action>(IntroduceVariable)
vmap <leader>li <action>(IntroduceVariable)
" nnoremap <leader>lj <action>(QuickJavaDoc)
nmap <leader>lf <action>(FileStructurePopup)
nmap <leader>le <action>(ShowErrorDescription)
nmap == :action ReformatCode \| action OptimizeImports<CR>

" version control
noremap <leader>vv :action Git.ContextMenu<CR>
nnoremap <leader>vc :action Git.CompareWithBranch<CR>

" debugger
noremap <leader>de :action QuickEvaluateExpression<CR>
noremap <leader>dE :action EvaluateExpression<CR>
" vnoremap <leader>di :action Debugger.AddInlineWatch<CR>
nnoremap <leader>dt :action ToggleLineBreakpoint<CR>
nnoremap <leader>dc :action Debugger.RemoveAllBreakpointsInFile<CR>
nnoremap <leader>dC :action Debugger.RemoveAllBreakpoints<CR>
nnoremap <leader>dm :action XDebugger.MuteBreakpoints<CR>
nnoremap <leader>df :action ForceRunToCursor<CR>

" bookmarks and buffer
let g:WhichKeyDesc_Bookmarks= "<leader>b Bookmarks"
nnoremap <leader>bb :action Bookmarks<CR>
nnoremap <leader>bs :action ShowBookmarks<CR>
nnoremap <leader>bt :action ToggleBookmark<CR>
nnoremap <leader>bf :action AddToFavorites<CR>
" 创建项目级别的bookmark
nmap ma mA
nmap 'a 'A
nmap ms mS
nmap 's 'S
nmap md mD
nmap 'd 'D
nmap mf mF
nmap 'f 'F

" run
nmap \cd <action>(ChooseDebugConfiguration)
nmap \cr <action>(ChooseRunConfiguration)
nmap \d <action>(Debug)
nmap \dc <action>(DebugClass)
nmap \rc <action>(RunClass)
nmap \r <action>(Run)
nmap \R <action>(Rerun)
nmap \s <action>(Stop)
nmap \a <action>(RunAnything)

" =====================================
" = Use \ as the build prefix==========
" =====================================

let g:WhichKeyDesc_Quit= "<leader>q Quit"
nmap <leader>qq <action>(Exit)
nmap <leader>qr <action>(RestartIde)
